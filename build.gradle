buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'com.github.kt3k.coveralls' version '2.8.4'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'eclipse'

mainClassName = 'edu.wofford.Main'

repositories {
    jcenter()
}

jar {
    archiveBaseName = rootProject.name
    manifest {
        attributes 'Main-Class': application.mainClassName
    }
}


dependencies {
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'org.slf4j:slf4j-api:1.7.26'
    implementation 'com.github.mkolisnyk:cucumber-runner:1.3.4'
    implementation 'org.assertj:assertj-swing:3.17.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.powermock:powermock-mockito-release-full:1.6.4'
    testImplementation 'io.cucumber:cucumber-java:4.3.1'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-proc:none', '-Xlint:unchecked', '-Xlint:deprecation']
}


jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        html {
            enabled true
        }
        xml {
            enabled true
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                        '**/edu/wofford/Main*',
                        '**/edu/wofford/ConsoleMain*',
                        '**/edu/wofford/GuiMain*']
                    )
        }))
    }
}

javadoc {
    options.with {
        links 'https://docs.oracle.com/javase/8/docs/api/'
    }
    exclude 'edu/wofford/Main*'
    exclude 'edu/wofford/ConsoleMain*'
    exclude 'edu/wofford/GuiMain*'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'html:build/reports/cucumber', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
    timeout = Duration.ofMinutes(3)
}

